# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AcceptFollowRequestType {
  id: String!
}

input ChangePasswordType {
  currentPassword: String!
  newPassword: String!
}

input CreateFollowRequestType {
  id: String!
}

input CreateIdeaType {
  content: String!
  visibility: IdeaVisibilityType!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteIdeaType {
  id: ID!
}

type FollowRequestConnection {
  edges: [FollowRequestTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type FollowRequestType {
  from: UserType!
  fromId: ID!
  id: ID!
  to: UserType!
  toId: ID!
}

type FollowRequestTypeEdge {
  cursor: String!
  node: FollowRequestType!
}

type FollowerConnection {
  edges: [FollowerTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type FollowerType {
  from: UserType!
  fromId: ID!
  id: ID!
  to: UserType!
  toId: ID!
}

type FollowerTypeEdge {
  cursor: String!
  node: FollowerType!
}

type IdeaConnection {
  edges: [IdeaTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type IdeaType {
  authorId: String!
  content: String!
  createdAt: DateTime!
  id: ID!
  visibility: IdeaVisibilityType!
}

type IdeaTypeEdge {
  cursor: String!
  node: IdeaType!
}

enum IdeaVisibilityType {
  PRIVATE
  PROTECTED
  PUBLIC
}

input ListFollowRequestsType {
  after: ID
  before: ID
  first: Float
  last: Float
}

input ListFollowerType {
  after: ID
  before: ID
  first: Float
  last: Float
}

input ListIdeaType {
  after: ID
  before: ID
  first: Float
  last: Float
}

type Mutation {
  acceptFollowRequest(
    """Accept a follow request"""
    input: AcceptFollowRequestType!
  ): Boolean!
  changePassword(
    """Change user password"""
    input: ChangePasswordType!
  ): Boolean!
  createIdea(
    """Creates a new idea"""
    input: CreateIdeaType!
  ): IdeaType!
  deleteIdea(
    """Updates an idea"""
    input: DeleteIdeaType!
  ): Boolean!
  rejectFollowRequest(
    """Reject a follow request"""
    input: RejectFollowRequestType!
  ): Boolean!
  requestResetPassword(
    """Request password reset"""
    input: RequestResetPassowrdType!
  ): String!
  resetPassword(
    """Reset password"""
    input: ResetPasswordType!
  ): Boolean!
  sendFollowRequest(
    """Send a follow request to a user"""
    input: CreateFollowRequestType!
  ): Boolean!
  signIn(
    """Log in"""
    input: SignInType!
  ): UserType!
  signUp(
    """Creates a new user"""
    input: SignUpType!
  ): UserType!
  updateIdea(
    """Updates an idea"""
    input: UpdateIdeaType!
  ): IdeaType!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  listFollowRequests(
    """List user follow requests"""
    input: ListFollowRequestsType!
  ): FollowRequestConnection!
  listFollowers(
    """List followers"""
    input: ListFollowerType!
  ): FollowerConnection!
  listFollowing(
    """List following"""
    input: ListFollowerType!
  ): FollowerConnection!
  listIdeas(
    """List user ideas"""
    input: ListIdeaType!
  ): IdeaConnection!
  me: UserType!
}

input RejectFollowRequestType {
  id: String!
}

input RequestResetPassowrdType {
  email: String!
}

input ResetPasswordType {
  password: String!
  token: String!
}

input SignInType {
  email: String!
  password: String!
}

input SignUpType {
  email: String!
  firstName: String!
  lastName: String
  password: String!
}

input UpdateIdeaType {
  content: String
  id: ID!
  visibility: IdeaVisibilityType
}

type UserType {
  email: String!
  firstName: String!
  id: ID!
  lastName: String
  token: String!
}